{
  "name": "int32",
  "version": "4.0.3",
  "description": "Use Rust to compute 32-bit signed integers and wrap around at the boundary.",
  "type": "module",
  "exports": "./lib/lib.js",
  "types": "./lib/lib.d.ts",
  "engines": {
    "node": ">=16"
  },
  "files": [
    "lib",
    "src",
    "Cargo.toml"
  ],
  "scripts": {
    "test": "node --experimental-specifier-resolution=node --experimental-vm-modules node_modules/jest/bin/jest.js",
    "test:coverage": "node --experimental-specifier-resolution=node --experimental-vm-modules  node_modules/jest/bin/jest.js --coverage",
    "test:inspect-brk": "node --experimental-specifier-resolution=node --experimental-vm-modules --inspect-brk=0.0.0.0:9230 node_modules/jest/bin/jest.js --testTimeout 0 --runInBand",
    "clean": "rimraf lib",
    "install": "napi build --release --platform --js index.cjs --dts index.d.cts",
    "build": "npm run clean && npm run install && tsc -p tsconfig.build.json",
    "build:watch": "npm run build -- -w",
    "lint": "eslint src tests",
    "lint:fix": "npm run lint -- --fix",
    "prepare": "git config core.hooksPath .githooks || exit 0",
    "prepack": "npm run build",
    "prepublishOnly": "npm run lint && npm run test"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/magiclen/node-int32.git"
  },
  "keywords": [
    "int32",
    "overflow",
    "underflow",
    "nodejs"
  ],
  "author": "Magic Len",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/magiclen/node-int32/issues"
  },
  "homepage": "https://magiclen.org/node-js-int32/",
  "devDependencies": {
    "@types/jest": "^29.5.0",
    "@typescript-eslint/eslint-plugin": "^5.58.0",
    "@typescript-eslint/parser": "^5.58.0",
    "eslint": "^8.38.0",
    "jest": "^29.5.0",
    "rimraf": "^5.0.0",
    "ts-jest": "^29.1.0",
    "typescript": "^5.0.4"
  },
  "dependencies": {
    "@napi-rs/cli": "^2.15.2"
  }
}
